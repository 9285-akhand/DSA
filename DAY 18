257
Binary Tree Paths

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
string k="->";
vector<string>ans;
    vector<string> binaryTreePaths1(TreeNode* root,string s) {
        if(root==NULL)
        {
            return ans;
        }
        if(root->left==NULL && root->right==NULL)
        {
            string a=to_string(root->val);
            s+=a;
            ans.push_back(s);
            s="";
            return ans;
        }
            string a=to_string(root->val);
            s+=a;
            s+=k;
            ans=binaryTreePaths1(root->left,s);
            ans=binaryTreePaths1(root->right,s);
            return ans;
    }
    vector<string> binaryTreePaths(TreeNode* root)
    {
        string s="";
        vector<string>an=binaryTreePaths1(root,s);
        return an;
    }
};
