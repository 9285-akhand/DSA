107
Binary Tree Level Order Traversal II

class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>>ans;
        if(root==NULL)
        {
          vector<int>v;
          ans.push_back(v);
          ans.pop_back();
          return ans;
        }
    queue<TreeNode*>pending;
	pending.push(root);
  vector<int>k;
  k.push_back(root->val);
  ans.push_back(k);
	while(pending.size()!=0)
	{
		int k=pending.size();
        vector<int>v;
                for (int i = 0; i < k; i++){
                  TreeNode* node = pending.front();
                  pending.pop();
                  if (node->left != NULL)
                  {
                    pending.push(node->left);
                    v.push_back(node->left->val);
                  }
                  if (node->right != NULL)
                  {
                    pending.push(node->right);
                    v.push_back(node->right->val);
                }
        }
        ans.push_back(v);
    }
    ans.pop_back();
    reverse(ans.begin(),ans.end());
    return ans;
    }
};
